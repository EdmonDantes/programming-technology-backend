buildscript {

    ext {
        spring_verion = "2.3.1.RELEASE"
    }

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_verion}"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'maven-publish'

    id 'org.jetbrains.kotlin.jvm' version "1.3.71"
    id 'com.jfrog.artifactory' version '4.15.1'
    id 'com.palantir.docker' version '0.25.0'
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'




ext {
    version_major = 1
    version_minor = 1
    kotlin_version = "1.3.72"
    lombok_version = "1.18.6"
    log4j2_version = "2.13.3"

    docker_image_name = project.name + "-docker"
    dockerImageVersion = "${version_major}.${version_minor}"
}

group 'ru.loginov'
version "${version_major}.${version_minor}-SNAPSHOT"

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compileOnly "org.projectlombok:lombok:${lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${lombok_version}"

    implementation "org.apache.logging.log4j:log4j-core:${log4j2_version}"
    implementation "org.apache.logging.log4j:log4j-1.2-api:${log4j2_version}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    runtime "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"

    implementation "commons-cli:commons-cli:1.4"
    implementation "commons-net:commons-net:3.6"
    implementation "org.apache.commons:commons-lang3:3.10"
    implementation "org.apache.commons:commons-math3:3.6.1"
    implementation "commons-configuration:commons-configuration:1.10"

    implementation "org.springframework.boot:spring-boot-starter-thymeleaf:${spring_verion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${spring_verion}"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${spring_verion}"
    implementation "mysql:mysql-connector-java:8.0.21"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

jar {
    enabled = true

    manifest {
        attributes(
                'Main-Class': 'ru.loginov.Main'
        )
    }
}

mainClassName = 'ru.loginov.Main'

application {
    mainClassName = 'ru.loginov.Main'
}

distTar {
    archiveName "${archivesBaseName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name "${docker_image_name}:${dockerImageVersion}"
    tag 'local-version', "${docker_image_name}:${dockerImageVersion}"

    copySpec.from(tarTree("$buildDir/distributions/${archivesBaseName}.tar"))
}

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
    main.java.srcDirs += "src/main/java"
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name =  "localRepo"
            url = "./shared"
        }
    }
}

artifactory {
    publish {
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            publishBuildInfo = true
            // Properties to be attached to the published artifacts.
            publishPom = true
        }
    }
}



sourceCompatibility = 1.11
targetCompatibility = 1.11


compileKotlin {
    kotlinOptions.jvmTarget = "11"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}